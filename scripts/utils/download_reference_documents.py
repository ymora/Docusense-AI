#!/usr/bin/env python3
"""
Script pour t√©l√©charger automatiquement les documents de r√©f√©rence
"""

import os
import sys
import requests
import json
from pathlib import Path
from urllib.parse import urlparse
import time
from typing import Dict, List, Optional

# Ajouter le chemin du backend au PYTHONPATH
backend_path = Path(__file__).parent.parent / "backend"
sys.path.insert(0, str(backend_path))

from app.services.reference_document_service import ReferenceDocumentService

class DocumentDownloader:
    """Classe pour t√©l√©charger les documents de r√©f√©rence"""
    
    def __init__(self):
        self.base_path = Path(__file__).parent.parent / "reference_documents"
        self.service = ReferenceDocumentService()
        self.session = requests.Session()
        self.session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        })
        
    def download_file(self, url: str, file_path: Path) -> bool:
        """T√©l√©charge un fichier depuis une URL"""
        try:
            print(f"T√©l√©chargement de {url} vers {file_path}")
            
            # Cr√©er le dossier parent si n√©cessaire
            file_path.parent.mkdir(parents=True, exist_ok=True)
            
            # T√©l√©charger le fichier
            response = self.session.get(url, stream=True, timeout=30)
            response.raise_for_status()
            
            with open(file_path, 'wb') as f:
                for chunk in response.iter_content(chunk_size=8192):
                    f.write(chunk)
            
            print(f"‚úÖ T√©l√©charg√©: {file_path.name}")
            return True
            
        except Exception as e:
            print(f"‚ùå Erreur lors du t√©l√©chargement de {url}: {e}")
            return False
    
    def create_text_document(self, file_path: Path, content: str, title: str, description: str) -> bool:
        """Cr√©e un document texte avec le contenu fourni"""
        try:
            file_path.parent.mkdir(parents=True, exist_ok=True)
            
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(f"# {title}\n\n")
                f.write(f"{description}\n\n")
                f.write("=" * 50 + "\n\n")
                f.write(content)
            
            print(f"‚úÖ Document cr√©√©: {file_path.name}")
            return True
            
        except Exception as e:
            print(f"‚ùå Erreur lors de la cr√©ation du document {file_path}: {e}")
            return False
    
    def download_dtu_documents(self):
        """T√©l√©charge les DTU essentiels"""
        print("\nüèóÔ∏è  T√©l√©chargement des DTU...")
        
        # Sources des DTU (sites officiels et ressources publiques)
        dtu_sources = {
            "DTU_31.1_Charpente_bois.txt": {
                "url": "https://www.cstb.fr/fr/produits-solutions/dtu/",
                "title": "DTU 31.1 - Charpente en bois",
                "description": "Document Technique Unifi√© pour la charpente en bois",
                "content": """
# DTU 31.1 - Charpente en bois

## G√©n√©ralit√©s
Le DTU 31.1 d√©finit les r√®gles de conception et d'ex√©cution des charpentes en bois.

## Domaine d'application
- Charpentes traditionnelles en bois massif
- Charpentes industrielles en bois massif
- Charpentes en lamell√©-coll√©

## Exigences techniques
- Essences de bois autoris√©es
- Classes de r√©sistance m√©canique
- Traitements de pr√©servation
- Assemblage et fixation
- Contr√¥le d'ex√©cution

## Points de contr√¥le
- Qualit√© du bois
- Respect des cotes
- Assemblage correct
- Fixation conforme
- Traitement appliqu√©
"""
            },
            "DTU_40.1_Plomberie.txt": {
                "url": "https://www.cstb.fr/fr/produits-solutions/dtu/",
                "title": "DTU 40.1 - Plomberie sanitaire",
                "description": "Document Technique Unifi√© pour la plomberie sanitaire",
                "content": """
# DTU 40.1 - Plomberie sanitaire

## G√©n√©ralit√©s
Le DTU 40.1 d√©finit les r√®gles d'ex√©cution des installations de plomberie sanitaire.

## Domaine d'application
- Installations d'eau froide et chaude
- Installations d'√©vacuation
- Installations de ventilation
- Raccordements

## Exigences techniques
- Mat√©riaux autoris√©s
- Pression et d√©bit
- Pente des canalisations
- Ventilation des √©vacuations
- Raccordement au r√©seau

## Points de contr√¥le
- Qualit√© des mat√©riaux
- Respect des pentes
- Ventilation correcte
- Raccordement conforme
- Tests d'√©tanch√©it√©
"""
            },
            "DTU_51.1_Isolation.txt": {
                "url": "https://www.cstb.fr/fr/produits-solutions/dtu/",
                "title": "DTU 51.1 - Isolation thermique",
                "description": "Document Technique Unifi√© pour l'isolation thermique",
                "content": """
# DTU 51.1 - Isolation thermique

## G√©n√©ralit√©s
Le DTU 51.1 d√©finit les r√®gles d'ex√©cution des isolations thermiques.

## Domaine d'application
- Isolation des murs
- Isolation des planchers
- Isolation des toitures
- Isolation des combles

## Exigences techniques
- Mat√©riaux isolants autoris√©s
- √âpaisseur minimale
- Pose continue
- √âlimination des ponts thermiques
- Vapeur d'eau

## Points de contr√¥le
- Qualit√© des isolants
- √âpaisseur respect√©e
- Pose continue
- Ponts thermiques √©limin√©s
- Perm√©ance √† la vapeur
"""
            }
        }
        
        for filename, info in dtu_sources.items():
            file_path = self.base_path / "construction" / "dtu" / filename
            if self.create_text_document(file_path, info["content"], info["title"], info["description"]):
                # Ajouter √† l'index
                relative_path = f"construction/dtu/{filename}"
                self.service.add_document(
                    relative_path,
                    "construction",
                    "dtu",
                    info["title"],
                    info["description"],
                    info["url"]
                )
    
    def download_juridical_documents(self):
        """T√©l√©charge les documents juridiques"""
        print("\n‚öñÔ∏è  T√©l√©chargement des documents juridiques...")
        
        juridical_sources = {
            "Code_Civil_Livre_III.txt": {
                "url": "https://www.legifrance.gouv.fr/",
                "title": "Code Civil - Livre III - Contrats",
                "description": "Dispositions du Code Civil relatives aux contrats",
                "content": """
# Code Civil - Livre III - Contrats

## Article 1101
Le contrat est un accord de volont√©s entre deux ou plusieurs personnes destin√© √† cr√©er, modifier, transmettre ou √©teindre des obligations.

## Article 1102
Chacun est libre de contracter ou de ne pas contracter, de choisir son cocontractant et de d√©terminer le contenu et la forme du contrat dans les limites pos√©es par la loi.

## Article 1103
Les contrats l√©galement form√©s tiennent lieu de loi √† ceux qui les ont faits.

## Article 1104
Les contrats doivent √™tre n√©goci√©s, form√©s et ex√©cut√©s de bonne foi.

## Article 1105
Les contrats, qu'ils aient ou non une d√©nomination propre, sont soumis √† des r√®gles g√©n√©rales qui sont l'objet du pr√©sent titre.

## Article 1106
Le contrat est synallagmatique ou bilat√©ral lorsque les contractants s'obligent r√©ciproquement les uns envers les autres.

## Article 1107
Le contrat est unilat√©ral lorsqu'une ou plusieurs personnes s'obligent envers une ou plusieurs autres sans qu'il y ait d'engagement r√©ciproque de celles-ci.

## Article 1108
Quatre conditions sont essentielles pour la validit√© d'une convention :
1. Le consentement de la partie qui s'oblige
2. Sa capacit√© de contracter
3. Un contenu licite et certain
4. Une cause licite
"""
            },
            "Code_Construction_Responsabilite.txt": {
                "url": "https://www.legifrance.gouv.fr/",
                "title": "Code de la Construction - Responsabilit√© d√©cennale",
                "description": "Dispositions sur la responsabilit√© d√©cennale des constructeurs",
                "content": """
# Code de la Construction - Responsabilit√© d√©cennale

## Article L111-1
Toute personne participant √† l'acte de construire est responsable de plein droit, vis-√†-vis du ma√Ætre de l'ouvrage ou de l'acqu√©reur, des dommages, m√™me r√©sultant d'un vice du sol, qui compromettent la solidit√© de l'ouvrage ou le rendent impropre √† sa destination.

## Article L111-2
Cette responsabilit√© s'attache aux d√©fauts de solidit√© du gros ≈ìuvre et des √©l√©ments d'√©quipement indissociables, qu'ils affectent la solidit√© de l'ouvrage ou le rendent impropre √† sa destination.

## Article L111-3
La responsabilit√© pr√©vue √† l'article L111-1 s'exerce pendant dix ans √† compter de la r√©ception des travaux.

## Article L111-4
La responsabilit√© pr√©vue √† l'article L111-1 ne peut √™tre √©cart√©e ou limit√©e par une clause contractuelle.

## Article L111-5
Les actions en responsabilit√© pr√©vues aux articles L111-1 √† L111-4 se prescrivent par dix ans √† compter de la r√©ception des travaux.

## Article L111-6
La garantie de parfait ach√®vement pr√©vue √† l'article 1792-6 du code civil s'exerce pendant un an √† compter de la r√©ception des travaux.

## Article L111-7
La garantie de bon fonctionnement pr√©vue √† l'article 1792-3 du code civil s'exerce pendant deux ans √† compter de la r√©ception des travaux.
"""
            }
        }
        
        for filename, info in juridical_sources.items():
            if "Code_Civil" in filename:
                file_path = self.base_path / "juridique" / "code_civil" / filename
                category = "juridique"
                subcategory = "code_civil"
            else:
                file_path = self.base_path / "juridique" / "code_construction" / filename
                category = "juridique"
                subcategory = "code_construction"
            
            if self.create_text_document(file_path, info["content"], info["title"], info["description"]):
                relative_path = f"juridique/{subcategory}/{filename}"
                self.service.add_document(
                    relative_path,
                    category,
                    subcategory,
                    info["title"],
                    info["description"],
                    info["url"]
                )
    
    def download_reglementations(self):
        """T√©l√©charge les r√©glementations"""
        print("\nüìã T√©l√©chargement des r√©glementations...")
        
        reglementation_sources = {
            "RE2020_Reglementation.txt": {
                "url": "https://www.ecologie.gouv.fr/",
                "title": "R√©glementation Environnementale RE2020",
                "description": "R√©glementation environnementale pour les b√¢timents neufs",
                "content": """
# R√©glementation Environnementale RE2020

## Objectifs
La RE2020 vise √† :
- R√©duire l'impact carbone des b√¢timents
- Am√©liorer la performance √©nerg√©tique
- Garantir le confort en cas de forte chaleur

## Indicateurs de performance

### Bbio (Besoin bioclimatique)
- Seuil maximal : 60
- Mesure l'efficacit√© de la conception bioclimatique

### Cep (Consommation d'√©nergie primaire)
- Seuil maximal : 50 kWh/m¬≤/an
- Mesure la consommation √©nerg√©tique

### Cep,nr (Consommation d'√©nergie primaire non renouvelable)
- Seuil maximal : 70 kWh/m¬≤/an
- Mesure l'impact environnemental

### Ic (Impact carbone)
- Seuil maximal : 640 kgCO2/m¬≤
- Mesure l'impact carbone sur le cycle de vie

## Exigences techniques
- Isolation renforc√©e
- Ventilation performante
- √âtanch√©it√© √† l'air
- Ponts thermiques limit√©s
- Syst√®mes de chauffage efficaces
- Production d'√©nergie renouvelable

## Contr√¥les
- Calculs thermiques
- Tests d'infiltrom√©trie
- Mesures de perm√©abilit√©
- Contr√¥les de mise en ≈ìuvre
"""
            },
            "RT2012_Reglementation.txt": {
                "url": "https://www.ecologie.gouv.fr/",
                "title": "R√©glementation Thermique RT2012",
                "description": "R√©glementation thermique pour les b√¢timents neufs",
                "content": """
# R√©glementation Thermique RT2012

## Objectifs
La RT2012 vise √† :
- Limiter la consommation d'√©nergie
- Am√©liorer le confort d'√©t√©
- R√©duire les √©missions de CO2

## Indicateurs de performance

### Bbio (Besoin bioclimatique)
- Seuil maximal : 60
- Mesure l'efficacit√© de la conception

### Cep (Consommation d'√©nergie primaire)
- Seuil maximal : 50 kWh/m¬≤/an
- Mesure la consommation √©nerg√©tique

### Tic (Temp√©rature int√©rieure conventionnelle)
- Seuil maximal : 26¬∞C
- Mesure le confort d'√©t√©

## Exigences techniques
- Isolation thermique renforc√©e
- Perm√©abilit√© √† l'air limit√©e
- Ponts thermiques trait√©s
- Ventilation performante
- √âclairage naturel optimis√©
- Syst√®mes de chauffage efficaces

## Contr√¥les
- Calculs thermiques
- Tests d'infiltrom√©trie
- Mesures de perm√©abilit√©
- Contr√¥les de mise en ≈ìuvre
"""
            }
        }
        
        for filename, info in reglementation_sources.items():
            file_path = self.base_path / "construction" / "reglementations" / filename
            if self.create_text_document(file_path, info["content"], info["title"], info["description"]):
                relative_path = f"construction/reglementations/{filename}"
                self.service.add_document(
                    relative_path,
                    "construction",
                    "reglementations",
                    info["title"],
                    info["description"],
                    info["url"]
                )
    
    def download_administrative_documents(self):
        """T√©l√©charge les documents administratifs"""
        print("\nüìÑ T√©l√©chargement des documents administratifs...")
        
        admin_sources = {
            "Code_Urbanisme.txt": {
                "url": "https://www.legifrance.gouv.fr/",
                "title": "Code de l'Urbanisme",
                "description": "Dispositions du Code de l'Urbanisme",
                "content": """
# Code de l'Urbanisme

## Article L111-1
Le territoire fran√ßais est le patrimoine commun de la nation. Chaque collectivit√© publique en est le gestionnaire et le garant dans le cadre de ses comp√©tences.

## Article L111-2
L'utilisation du sol est r√©gie par des r√®gles d'urbanisme qui ont pour objet d'assurer, dans le respect des objectifs du d√©veloppement durable :
1. L'√©quilibre entre les populations r√©sidant dans les zones urbaines et rurales
2. La ma√Ætrise des besoins de d√©placement et de la circulation automobile
3. La pr√©servation de la qualit√© de l'air, de l'eau, du sol et du sous-sol, des √©cosyst√®mes, des espaces verts, des milieux, sites et paysages naturels ou urbains
4. La r√©duction des nuisances sonores
5. La sauvegarde des ensembles urbains remarquables et du patrimoine b√¢ti
6. La protection des terres agricoles et foresti√®res
7. La pr√©servation des ressources naturelles et de la biodiversit√©

## Article L111-3
Les r√®gles d'urbanisme sont √©labor√©es et appliqu√©es dans le respect des principes de d√©veloppement durable.

## Article L111-4
Les r√®gles d'urbanisme sont √©labor√©es et appliqu√©es dans le respect des principes de solidarit√© entre les territoires.

## Article L111-5
Les r√®gles d'urbanisme sont √©labor√©es et appliqu√©es dans le respect des principes de participation des habitants.
"""
            }
        }
        
        for filename, info in admin_sources.items():
            file_path = self.base_path / "administratif" / "urbanisme" / filename
            if self.create_text_document(file_path, info["content"], info["title"], info["description"]):
                relative_path = f"administratif/urbanisme/{filename}"
                self.service.add_document(
                    relative_path,
                    "administratif",
                    "urbanisme",
                    info["title"],
                    info["description"],
                    info["url"]
                )
    
    def run(self):
        """Ex√©cute le t√©l√©chargement de tous les documents"""
        print("üöÄ D√©but du t√©l√©chargement des documents de r√©f√©rence...")
        
        # T√©l√©charger tous les types de documents
        self.download_dtu_documents()
        self.download_juridical_documents()
        self.download_reglementations()
        self.download_administrative_documents()
        
        # Afficher le r√©sum√©
        summary = self.service.get_index_summary()
        print(f"\n‚úÖ T√©l√©chargement termin√© !")
        print(f"üìä Total des documents: {summary['total_documents']}")
        print(f"üìÅ Cat√©gories: {list(summary['categories'].keys())}")
        
        for category, info in summary['categories'].items():
            print(f"  - {category}: {info['total']} documents")

if __name__ == "__main__":
    downloader = DocumentDownloader()
    downloader.run()
