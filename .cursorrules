# ==========================
# COMMANDES
# ==========================

commands:
  run: "venv\\Scripts\\python.exe main.py"
  install: "venv\\Scripts\\pip.exe install"
  update: "venv\\Scripts\\pip.exe install --upgrade"
  list: "venv\\Scripts\\pip.exe list"

# ==========================
# VÉRIFICATION ENVIRONNEMENT
# ==========================

check:
  - "venv\\Scripts\\python.exe --version"
  - "venv\\Scripts\\pip.exe list"
  - "venv\\Scripts\\python.exe -c \"import sys; print(sys.executable)\""

# ==========================
# STARTUP SERVICES
# ==========================

startup:
  script: "start_optimized.ps1"
  backend: |
    cd backend
    venv\\Scripts\\python.exe main.py
  frontend: |
    taskkill /F /IM node.exe /T
    cd frontend
    npm run dev

# ==========================
# NAVIGATION FICHIERS
# ==========================

navigation:
  # Bouton "↑ Niveau supérieur" dans le panneau gauche
  # Comportement: remonte d'un niveau à chaque clic jusqu'à la racine
  # Fonction: navigateToParent() dans LeftPanel.tsx
  # IMPORTANT: Navigation dans le système de fichiers (pas la base de données)
  # Correction: setCurrentDirectory() appelé avant loadDirectoryTree() pour mise à jour d'état
  # Endpoint utilisé: /api/files/list/{directory} pour obtenir le contenu du répertoire

# ==========================
# GESTION TERMINAL
# ==========================

terminal:
  # ÉVITER LES COMMANDES BLOQUÉES
  # Toujours utiliser is_background: true pour les commandes longues
  # Ajouter des timeouts et vérifications d'état
  # Ne jamais laisser une commande sans fin
  
  long_running:
    - "npm install" -> is_background: true
    - "pip install" -> is_background: true  
    - "python main.py" -> is_background: true
    - "npm run dev" -> is_background: true
  
  # Commandes avec timeout automatique
  timeout_commands:
    - "pip install -r requirements.txt" -> max 5 minutes
    - "npm install" -> max 10 minutes
    - "python main.py" -> vérifier port après 10 secondes
  
  # Indicateurs de fin
  completion_signals:
    - "Successfully installed" -> pip terminé
    - "added X packages" -> npm terminé
    - "Uvicorn running on" -> backend démarré
    - "Local:" -> frontend démarré
  
  # Actions automatiques après fin
  post_completion:
    - Vérifier les ports (8000, 3000)
    - Afficher les URLs d'accès
    - Confirmer le succès à l'utilisateur
